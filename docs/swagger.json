{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is documentation of my contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "email",
                  "photo",
                  "isFavourite",
                  "contactType",
                  "userId"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "phoneNumber": {
                    "description": "Contact's phoneNumber",
                    "type": "string",
                    "example": 380000000005
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "photo": {
                    "description": "Link to contact's photo",
                    "type": "string",
                    "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
                  },
                  "isFavourite": {
                    "description": "Whether is contact isFavourit",
                    "type": "boolean",
                    "example": false
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": [
                      "personal",
                      "home",
                      "other"
                    ]
                  },
                  "userId": {
                    "description": "Contact's parent id",
                    "type": "string",
                    "example": "682098550c475ecc03ef107a"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully add contact"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getContacts",
        "description": "Get list of contacts with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "example": "name",
              "enum": [
                "name",
                "phoneNumber",
                "email",
                "createdAt",
                "updatedAt",
                "_id"
              ],
              "description": "Field for sorting contacts. Default is '_id'"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasPreviousPage",
                        "hasNextPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 4
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6820d5701dd2921718f40f3a"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 6820d5701dd2921718f40f3a!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update existing contact",
        "operationId": "updateContact",
        "description": "Updates contact information for the specified ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6820a5b8a8fd6a0c07bc1cf9"
            },
            "description": "The ID of the contact to be updated"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "newName",
                    "description": "New contact name (optional)"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+380991234567",
                    "description": "New contact phone number (optional)"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "new.email@example.com",
                    "description": "New contact email (optional)"
                  },
                  "photo": {
                    "type": "string",
                    "example": "https://res.cloudinary.com/your_cloud/image/upload/v1234567890/new_photo.jpg",
                    "description": "URL of the new contact photo (optional)"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": true,
                    "description": "New \"favorite\" status (optional)"
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "personal",
                      "home",
                      "other"
                    ],
                    "example": "home",
                    "description": "New contact type (optional)"
                  },
                  "example": {
                    "name": "Updated Name",
                    "email": "updated.email@example.com",
                    "isFavourite": true
                  }
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "New Name",
                      "description": "New contact name (optional)"
                    },
                    "phoneNumber": {
                      "type": "string",
                      "example": "+380991234567",
                      "description": "New contact phone number (optional)"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "new.email@example.com",
                      "description": "New contact email (optional)"
                    },
                    "photo": {
                      "type": "string",
                      "format": "binary",
                      "description": "New contact photo (optional)"
                    },
                    "isFavourite": {
                      "type": "boolean",
                      "example": true,
                      "description": "New \"favorite\" status (optional)"
                    },
                    "contactType": {
                      "type": "string",
                      "enum": [
                        "personal",
                        "home",
                        "other"
                      ],
                      "example": "home",
                      "description": "New contact type (optional)"
                    }
                  },
                  "encoding": {
                    "photo": {
                      "contentType": "image/png, image/jpeg"
                    }
                  },
                  "examples": {
                    "updateNameAndPhotoForm": {
                      "summary": "Update name and photo (form-data)",
                      "value": {
                        "name": "New Name",
                        "photo": "binary data of image"
                      }
                    },
                    "updateAllFieldsForm": {
                      "summary": "Updating all possible fields (form-data)",
                      "value": {
                        "name": "Updated Name",
                        "phoneNumber": "+380999876543",
                        "email": "another.email@example.com",
                        "photo": "binary data of another image",
                        "isFavourite": false,
                        "contactType": "home"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successfully update contact",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "../../components/schemas/contact.yaml"
                  }
                }
              }
            },
            "401": {
              "$ref": "../../components/responses/401.yaml"
            },
            "404": {
              "$ref": "../../components/responses/404.yaml"
            },
            "500": {
              "$ref": "../../components/responses/500.yaml"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact",
        "operationId": "deleteContact",
        "description": "Deletes the contact by the specified ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6820a5b8a8fd6a0c07bc1cf9",
              "description": "The ID of the contact to be deleted",
              "responses": {
                "204": {
                  "description": "Contact successfully deleted"
                },
                "401": {
                  "$ref": "../../components/responses/401.yaml"
                },
                "404": {
                  "description": "Contact with the specified ID not found",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "../../components/responses/404.yaml"
                      },
                      "example": {
                        "status": 404,
                        "message": "Contact with id=6820a5b8a8fd6a0c07bc1cf9 not found"
                      }
                    }
                  }
                },
                "500": {
                  "$ref": "../../components/responses/500.yaml"
                }
              }
            }
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "photo",
          "isFavourite",
          "contactType",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Contact's id",
            "type": "string",
            "example": "6820d5701dd2921718f40f3a"
          },
          "name": {
            "description": "Contact's name",
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "description": "Contact's phoneNumber",
            "type": "string",
            "example": "+380000000005"
          },
          "email": {
            "description": "Contact's email",
            "type": "string",
            "example": "john@example.com"
          },
          "photo": {
            "description": "Link to contact's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png"
          },
          "isFavourite": {
            "description": "Whether is contact isFavourit",
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "description": "Contact's type",
            "type": "string",
            "enum": [
              "personal",
              "home",
              "other"
            ]
          },
          "userId": {
            "description": "Contact's parent id",
            "type": "string",
            "example": "682098550c475ecc03ef107a"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized error"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Contact with id=6820d5701dd2921718f40f3a not found"
                }
              }
            }
          }
        }
      }
    }
  }
}